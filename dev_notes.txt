
Recursive operations

  Clear
    in HFH

      sub clear
      { 
         my $self = shift;
         warn "HFH: clear ", $self->name, "\n" if $self->verbose;
         $self->clear_data;
         $self->validated(0);
         $self->ran_validation(0);
         $self->clear_params;
         $self->clear_ctx;
         $self->processed(0);
         $self->did_init_obj(0);
      }

      sub clear_data
      {
         my $self = shift;
         $self->clear_value;
         $self->clear_input;
      }

   in Fields.pm
      after clear_data => sub
      {
         my $self = shift;
         $self->clear_error_fields;
         $self->clear_data for shift->fields;
      };

   in Field.pm

      sub clear_data
      {
         my $self = shift;
         $self->clear_input;
         $self->clear_value;
         $self->clear_fif;
         $self->clear_errors;
         $self->clear_init_value;
         $self->clear_other;
      }
      sub clear_other { }

  Field::Repeatable
      sub clear_other ...


Validation
   validate_form (HFH) 
     build_node (Fields) 
        fields_validate (Fields in HFH & Compound)
           validate_field (TransformAndCheck in HFH & Field)
              build_node ( if field is Compound (recursive))
              _apply_actions (T&C)
              validate (Field subclasses)
           _validate (form method pointed to in Field)
       


